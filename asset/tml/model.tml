package models

import (
	database "github.com/Benny66/ginServer/db"
	"gorm.io/gorm"
)
type {{.XModel}}Interface interface {
    //todo: create your function
	Create(tx *gorm.DB, data *{{.XModel}}Model) (rowsAffected int64, err error)
	Update(tx *gorm.DB, id uint, data map[string]interface{}) (rowsAffected int64, err error)
	Delete(tx *gorm.DB, data []int) (rowsAffected int64, err error)
	FindAllWhere(query interface{}, args ...interface{}) (list []{{.XModel}}Model, err error)
	FindOneWhere(query interface{}, args ...interface{}) (record {{.XModel}}Model, err error)
	FindCountWhere(query interface{}, args ...interface{}) (count int64, err error)
}

var {{.XModel}}Dao {{.XModel}}Interface = &{{.Model}}Dao{
	gm: database.Orm.DB(),
}

type {{.Model}}Dao struct {
	gm *gorm.DB
}

type {{.XModel}}Model struct {
    //todo create your filed
}

func (um {{.XModel}}Model) TableName() string {
	return "{{.Model}}"
}